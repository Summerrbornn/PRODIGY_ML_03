import os
import cv2
import numpy as np
from sklearn import svm
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split
from skimage.feature import hog

# Load and preprocess the images
def load_and_preprocess_images(data_dir):
    images = []
    labels = []
    for category in os.listdir(data_dir):
        category_path = os.path.join(data_dir, category)
        for image_name in os.listdir(category_path):
            image_path = os.path.join(category_path, image_name)
            image = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)
            image = cv2.resize(image, (64, 64))  # Resize the image
            hog_features = hog(image, pixels_per_cell=(8, 8))
            images.append(hog_features)
            labels.append(category)
    return np.array(images), labels

# Load and preprocess the dataset
data_dir = 'path_to_dataset'
X, y = load_and_preprocess_images(data_dir)

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train an SVM model
clf = svm.SVC(kernel='linear', C=1.0)
clf.fit(X_train, y_train)

# Predict using the trained model
y_pred = clf.predict(X_test)

# Calculate accuracy
accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy * 100:.2f}%')
